From: <Saved by Blink>
Snapshot-Content-Location: https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes/Lecture5_Scheme_Handout.html
Subject: Lecture 5: Lisp & Lisp Dialects
Date: Thu, 25 Jul 2024 20:10:31 +1000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--sUZ6AEZVcAwD6CfI39rbuvBLEgkpgzNprfGsa5mlge----"


------MultipartBoundary--sUZ6AEZVcAwD6CfI39rbuvBLEgkpgzNprfGsa5mlge----
Content-Type: text/html
Content-ID: <frame-55EC25A20C7B6DD633287BB668A7F54C@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes/Lecture5_Scheme_Handout.html

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-95130d4e-06b5-4ca2-aede-b50931509b9e@mhtml.blink" />

<title>Lecture 5: Lisp &amp; Lisp Dialects</title>
</head>
<body>
<section><p>Programming Languages</p>
<h1 id=3D"lecture-5-lisp-lisp-dialects">Lecture 5: Lisp &amp; Lisp Dialects=
</h1>
<p>Created by Arlen Brower. Updated <span>2022-08-26</span>.</p>
<div class=3D"toc"><span class=3D"toctitle">Contents</span><ul><li><a href=
=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content-rid-648617=
16_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes/Lecture5_S=
cheme_Handout.html#review">Review</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#elixir">Elixir</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#back-to-basics">Back to Basics</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#simplicity">Simplicity</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#lambda-closures">Lambda &amp; Closures</a></l=
i>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#closures-in-elixir">Closures in Elixir</a></l=
i>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#lists">Lists</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#tail-recursion">Tail Recursion</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#back-to-lisp">Back to Lisp</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#common-lisp">Common Lisp</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#scheme">Scheme</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#atoms-lists">Atoms &amp; Lists</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#list-functions">List Functions</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#local-scope-with-let">Local Scope with LET</a=
></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#the-most-beautiful">The Most Beautiful</a></l=
i>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#lets-look-at-some-examples">Let=E2=80=99s loo=
k at some examples</a></li>
<li><a href=3D"https://lms.curtin.edu.au/bbcswebdav/pid-10448796-dt-content=
-rid-64861716_1/courses/2022_2_COMP2007_V1_L1_A1_INT_752994/Lecture%20Notes=
/Lecture5_Scheme_Handout.html#recommended-reading">Recommended Reading</a><=
/li>
</ul></div>
</section><section><h3 id=3D"review">Review</h3>
<ul><li>Hopefully, you found the initial look at functional programming int=
eresting</li>
<li>If not, it=E2=80=99s almost over</li>
<li>This week, we=E2=80=99re going to look a little bit more at the technic=
al side</li>
<li>But first, a brief review over Elixir</li>
</ul></section><section><h3 id=3D"elixir">Elixir</h3>
<ul><li>Syntax is generally familiar</li>
<li>Recursion is key</li>
<li>Lists are pretty important</li>
<li>What did you think of it in terms of our characteristics?</li>
</ul></section><section><h3 id=3D"back-to-basics">Back to Basics</h3>
<ul><li>Let=E2=80=99s talk about some features of functional programming la=
nguages<ul><li>Simplicity</li>
<li>Lambda functions and closures</li>
<li>Lists</li>
<li>Tail recursion optimisation</li>
</ul></li>
</ul></section><section><h3 id=3D"simplicity">Simplicity</h3>
<ul><li>There tends to be a simple syntactic design with functional program=
ming</li>
<li>Not always =E2=80=93 there may have been parts of Elixir that might not=
 have seemed simple</li>
<li>Program design is typically much smaller, however</li>
<li>A lot of thinking involved for not a lot of code</li>
</ul></section><section><h3 id=3D"lambda-closures">Lambda &amp; Closures</h=
3>
<ul><li>The two terms are often used interchangeably</li>
<li>But there are differences<ul><li>Lambda expressions are nameless functi=
ons</li>
<li>Closures include lexical scoping of parameters</li>
</ul></li>
<li>Some languages support lambda expressions, but not closures</li>
</ul></section><section><h3 id=3D"closures-in-elixir">Closures in Elixir</h=
3>
<div class=3D"highlight"><pre><span></span><code><span class=3D"n">my_var</=
span><span class=3D"w"> </span><span class=3D"o">=3D</span><span class=3D"w=
"> </span><span class=3D"mi">0</span><span class=3D"w"></span>
<span class=3D"n">my_lambda</span><span class=3D"w"> </span><span class=3D"=
o">=3D</span><span class=3D"w"> </span><span class=3D"k">fn</span><span cla=
ss=3D"w"> </span><span class=3D"o">-&gt;</span><span class=3D"w"></span>
<span class=3D"w">    </span><span class=3D"nc">IO</span><span class=3D"o">=
.</span><span class=3D"n">puts</span><span class=3D"p">(</span><span class=
=3D"n">my_var</span><span class=3D"p">)</span><span class=3D"w"> </span>
<span class=3D"k">end</span><span class=3D"w"></span>
</code></pre></div>
</section><section><h3 id=3D"lists">Lists</h3>
<ul><li>We=E2=80=99ve talked about lists, in particular, their recursive st=
ructure<ul><li>The head is a value</li>
<li>The tail is a list</li>
<li>An empty list as a tail is the end of a list</li>
</ul></li>
<li>Just a bit of revision on this, consider the following list:
<div class=3D"highlight"><pre><span></span><code><span class=3D"p">[</span>=
<span class=3D"mi">1</span><span class=3D"p">,</span><span class=3D"mi">2</=
span><span class=3D"p">,[</span><span class=3D"s1">'b'</span><span class=3D=
"p">,</span><span class=3D"s1">'c'</span><span class=3D"p">],</span><span c=
lass=3D"mi">3</span><span class=3D"p">,</span><span class=3D"mi">4</span><s=
pan class=3D"p">]</span><span class=3D"w"></span>
</code></pre></div></li>
</ul></section><section><h3 id=3D"tail-recursion">Tail Recursion</h3>
<ul><li>So, what are the issues with recursion?</li>
<li>Let=E2=80=99s have a quick comparison in C vs Elixir</li>
</ul></section><section><h3 id=3D"back-to-lisp">Back to Lisp</h3>
<ul><li>We=E2=80=99ve already had a short discussion on the history of how =
Lisp came to be</li>
<li>But we haven=E2=80=99t talked so much about where it went</li>
<li>It is, indeed, still around!</li>
<li>Largely made up of two descendents:<ul><li>Scheme</li>
<li>Common Lisp</li>
</ul></li>
</ul></section><section><h3 id=3D"common-lisp">Common Lisp</h3>
<ul><li>Lisp had a lot of different dialects</li>
<li>Many of these were developed for particular implementations or interpre=
tations of features</li>
<li>Naturally, this meant there was a lack of portability</li>
<li>Common Lisp attempted to solve this.</li>
<li>Effectively combines many Lisp dialects (including Scheme)</li>
</ul></section><section><h3 id=3D"scheme">Scheme</h3>
<ul><li>We=E2=80=99ll be talking mostly about Scheme</li>
<li>Emerged from MIT in mid-1970s</li>
<li>Exclusively satic scoped</li>
<li>Functions are first-class entities</li>
</ul></section><section><h3 id=3D"atoms-lists">Atoms &amp; Lists</h3>
<ul><li>Atoms are a little different from what you=E2=80=99ve seen in Elixi=
r</li>
<li><em>Everything</em> is either an atom or a compound type (usually a lis=
t)<ul><li>Booleans, numbers, characters, symbols are all atomic types</li>
<li>Pairs, lists, vectors, strings are all compound data type</li>
</ul></li>
</ul></section><section><h3 id=3D"list-functions">List Functions</h3>
<div class=3D"highlight"><pre><span></span><code><span class=3D"p">(</span>=
<span class=3D"k">quote </span><span class=3D"p">(</span><span class=3D"nf"=
>a</span> <span class=3D"nv">b</span> <span class=3D"nv">c</span><span clas=
s=3D"p">))</span>
<span class=3D"p">(</span><span class=3D"nb">car </span><span class=3D"o">'=
</span><span class=3D"p">(</span><span class=3D"nv">a</span> <span class=3D=
"nv">b</span> <span class=3D"nv">c</span><span class=3D"p">))</span>
<span class=3D"p">(</span><span class=3D"nb">cdr </span><span class=3D"o">'=
</span><span class=3D"p">(</span><span class=3D"nv">a</span> <span class=3D=
"nv">b</span> <span class=3D"nv">c</span><span class=3D"p">))</span>
<span class=3D"p">(</span><span class=3D"nb">cons </span><span class=3D"ss"=
>'a</span> <span class=3D"o">'</span><span class=3D"p">(</span><span class=
=3D"nv">b</span> <span class=3D"nv">c</span><span class=3D"p">))</span>
<span class=3D"p">(</span><span class=3D"nb">cons </span><span class=3D"ss"=
>'a</span> <span class=3D"ss">'b</span><span class=3D"p">)</span>
</code></pre></div>
</section><section><h3 id=3D"local-scope-with-let">Local Scope with LET</h3=
>
<ul><li><code>LET</code> is a function that creates a local scope</li>
</ul><div class=3D"highlight"><pre><span></span><code><span class=3D"p">(</=
span><span class=3D"k">let </span><span class=3D"p">((</span><span class=3D=
"nf">x</span> <span class=3D"mi">5</span><span class=3D"p">))</span>
    <span class=3D"p">(</span><span class=3D"nb">+ </span><span class=3D"nv=
">x</span> <span class=3D"nv">x</span><span class=3D"p">))</span>
</code></pre></div>
<ul><li>Really, a lambda:</li>
</ul><div class=3D"highlight"><pre><span></span><code><span class=3D"p">(</=
span><span class=3D"nf">LET</span> <span class=3D"p">((</span><span class=
=3D"nf">alpha</span> <span class=3D"mi">7</span><span class=3D"p">))(</span=
><span class=3D"nb">* </span><span class=3D"mi">5</span> <span class=3D"nv"=
>alpha</span><span class=3D"p">))</span>
<span class=3D"p">((</span><span class=3D"nf">LAMBDA</span> <span class=3D"=
p">(</span><span class=3D"nf">alpha</span><span class=3D"p">)</span> <span =
class=3D"p">(</span><span class=3D"nb">* </span><span class=3D"mi">5</span>=
 <span class=3D"nv">alpha</span><span class=3D"p">))</span> <span class=3D"=
mi">7</span><span class=3D"p">)</span>
</code></pre></div>
</section><section><h3 id=3D"the-most-beautiful">The Most Beautiful</h3>
<div class=3D"highlight"><pre><span></span><code><span class=3D"p">(</span>=
<span class=3D"k">define </span><span class=3D"nv">eval-expr</span>
  <span class=3D"p">(</span><span class=3D"k">lambda </span><span class=3D"=
p">(</span><span class=3D"nf">expr</span> <span class=3D"nv">env</span><spa=
n class=3D"p">)</span>
    <span class=3D"p">(</span><span class=3D"nf">pmatch</span> <span class=
=3D"nv">expr</span>
      <span class=3D"p">[</span><span class=3D"o">`,</span><span class=3D"n=
v">x</span> <span class=3D"p">(</span><span class=3D"nf">guard</span> <span=
 class=3D"p">(</span><span class=3D"nb">symbol? </span><span class=3D"nv">x=
</span><span class=3D"p">))</span>
        <span class=3D"p">(</span><span class=3D"nf">env</span> <span class=
=3D"nv">x</span><span class=3D"p">)]</span>
      <span class=3D"p">[</span><span class=3D"o">`</span><span class=3D"p"=
>(</span><span class=3D"k">lambda </span><span class=3D"p">(</span><span cl=
ass=3D"o">,</span><span class=3D"nv">x</span><span class=3D"p">)</span> <sp=
an class=3D"o">,</span><span class=3D"nv">body</span><span class=3D"p">)</s=
pan>
        <span class=3D"p">(</span><span class=3D"k">lambda </span><span cla=
ss=3D"p">(</span><span class=3D"nf">arg</span><span class=3D"p">)</span>
          <span class=3D"p">(</span><span class=3D"nf">eval-expr</span> <sp=
an class=3D"nv">body</span> <span class=3D"p">(</span><span class=3D"k">lam=
bda </span><span class=3D"p">(</span><span class=3D"nf">y</span><span class=
=3D"p">)</span>
                            <span class=3D"p">(</span><span class=3D"k">if =
</span><span class=3D"p">(</span><span class=3D"nb">eq? </span><span class=
=3D"nv">x</span> <span class=3D"nv">y</span><span class=3D"p">)</span>
                                <span class=3D"nv">arg</span>
                                <span class=3D"p">(</span><span class=3D"nf=
">env</span> <span class=3D"nv">y</span><span class=3D"p">)))))]</span>
      <span class=3D"p">[</span><span class=3D"o">`</span><span class=3D"p"=
>(</span><span class=3D"o">,</span><span class=3D"nv">rator</span> <span cl=
ass=3D"o">,</span><span class=3D"nv">rand</span><span class=3D"p">)</span>
       <span class=3D"p">((</span><span class=3D"nf">eval-expr</span> <span=
 class=3D"nv">rator</span> <span class=3D"nv">env</span><span class=3D"p">)=
</span>
        <span class=3D"p">(</span><span class=3D"nf">eval-expr</span> <span=
 class=3D"nv">rand</span> <span class=3D"nv">env</span><span class=3D"p">))=
])))</span>
</code></pre></div>
</section><section><h3 id=3D"lets-look-at-some-examples">Let=E2=80=99s look=
 at some examples</h3>
<ul><li>We=E2=80=99ll finish up today with some examples.</li>
</ul></section><section><h3 id=3D"recommended-reading">Recommended Reading<=
/h3>
<ul><li>I will be adding a list of these to Blackboard =E2=80=93 thank you =
for the feedback!</li>
<li>I recommend:<ul><li>15.1-15.5</li>
<li>15.11 + Summary</li>
</ul></li>
</ul></section>

</body></html>
------MultipartBoundary--sUZ6AEZVcAwD6CfI39rbuvBLEgkpgzNprfGsa5mlge----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-95130d4e-06b5-4ca2-aede-b50931509b9e@mhtml.blink

@charset "utf-8";

@import url("https://fonts.googleapis.com/css2?family=3DMerriweather&family=
=3DMerriweather+Sans&display=3Dswap");

@import url("https://fonts.googleapis.com/css2?family=3DInconsolata:wght@50=
0&family=3DMerriweather&family=3DMerriweather+Sans&display=3Dswap");

@import url("https://fonts.googleapis.com/css2?family=3DOpen+Sans:ital,wght=
@0,400;0,700;1,400;1,700&display=3Dswap");

@media screen {
  html { background: rgb(64, 64, 64); }
  body { box-shadow: black 5px 5px 10px; max-width: 50em; padding: 4em; mar=
gin-left: auto; margin-right: auto; }
}

html { font-family: "Open Sans", sans-serif; line-height: 1.8em; }

body { background: white; }

h1, h3 { font-family: Merriweather, serif; }

h3 { margin-top: 1.5em; }

pre { line-height: 1.7em; }

code { font-family: Inconsolata, monospace; }

ul > li::marker { color: rgb(0, 128, 255); content: "=E2=96=A0=C2=A0"; }

ul ul > li::marker { color: rgb(128, 192, 255); content: "=E2=96=B8=C2=A0";=
 }

li { margin: 0.5em 0px; padding-left: 0.5em; padding-top: 0em; width: calc(=
100% - 1ex); }

code .o, code .p { color: red; }

code .k { color: blue; font-weight: bold; }

code .mi { color: rgb(0, 128, 128); }

code .s1, code .ss { color: green; }

code .nb, code .nc, code .nf, code .nv { color: black; }

@media screen {
  .toc { position: fixed; z-index: -1; left: 1ex; top: 1ex; overflow-y: scr=
oll; width: 20em; max-height: 90%; border-radius: 0.5ex; background: white;=
 box-shadow: black 5px 5px 10px; }
  .toc:hover, .toc:focus { z-index: 1; }
}

.toc { padding: 1em; }

.toc .toctitle { font-weight: bold; margin: 0px; }

pre { border: 1px solid grey; padding: 1ex; }

body { counter-reset: section_n 0; }

section { counter-increment: section_n 1; border-bottom: 1px solid black; }

section::after { content: counter(section_n); display: block; text-align: r=
ight; }
------MultipartBoundary--sUZ6AEZVcAwD6CfI39rbuvBLEgkpgzNprfGsa5mlge----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css2?family=Merriweather&family=Merriweather+Sans&display=swap

@charset "utf-8";

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-cSZMdeX3rsHo.woff2") format("woff2"); unicode-ra=
nge: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;=
 }

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-eCZMdeX3rsHo.woff2") format("woff2"); unicode-ra=
nge: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-cyZMdeX3rsHo.woff2") format("woff2"); unicode-ra=
nge: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+30=
0-301, U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-ciZMdeX3rsHo.woff2") format("woff2"); unicode-ra=
nge: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20=
A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-fCZMdeX3rg.woff2") format("woff2"); unicode-rang=
e: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, =
U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215,=
 U+FEFF, U+FFFD; }

@font-face { font-family: "Merriweather Sans"; font-style: normal; font-wei=
ght: 400; font-display: swap; src: url("https://fonts.gstatic.com/s/merriwe=
athersans/v26/2-cO9IRs1JiJN1FRAMjTN5zd9vgsFF_5asQTb6hZ2JKZou4VhOsHzRRXnKOrn=
x4.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, =
U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Merriweather Sans"; font-style: normal; font-wei=
ght: 400; font-display: swap; src: url("https://fonts.gstatic.com/s/merriwe=
athersans/v26/2-cO9IRs1JiJN1FRAMjTN5zd9vgsFF_5asQTb6hZ2JKZou4VhusHzRRXnKOrn=
x4.woff2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129,=
 U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U=
+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Merriweather Sans"; font-style: normal; font-wei=
ght: 400; font-display: swap; src: url("https://fonts.gstatic.com/s/merriwe=
athersans/v26/2-cO9IRs1JiJN1FRAMjTN5zd9vgsFF_5asQTb6hZ2JKZou4Vh-sHzRRXnKOrn=
x4.woff2") format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, =
U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-=
2C7F, U+A720-A7FF; }

@font-face { font-family: "Merriweather Sans"; font-style: normal; font-wei=
ght: 400; font-display: swap; src: url("https://fonts.gstatic.com/s/merriwe=
athersans/v26/2-cO9IRs1JiJN1FRAMjTN5zd9vgsFF_5asQTb6hZ2JKZou4ViesHzRRXnKOr.=
woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC=
, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+=
2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--sUZ6AEZVcAwD6CfI39rbuvBLEgkpgzNprfGsa5mlge----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css2?family=Inconsolata:wght@500&family=Merriweather&family=Merriweather+Sans&display=swap

@charset "utf-8";

@font-face { font-family: Inconsolata; font-style: normal; font-weight: 500=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/inconsolata/v32/QldgNThLqRwH-OJ1UHjlKENVzkWGVkL3GZQmAwLYxYWI2qfdm7Lpp7=
c8WRL2l3WdycuJDETf.woff2") format("woff2"); unicode-range: U+102-103, U+110=
-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+3=
08-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Inconsolata; font-style: normal; font-weight: 500=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/inconsolata/v32/QldgNThLqRwH-OJ1UHjlKENVzkWGVkL3GZQmAwLYxYWI2qfdm7Lpp7=
c8WRP2l3WdycuJDETf.woff2") format("woff2"); unicode-range: U+100-2AF, U+304=
, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0,=
 U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Inconsolata; font-style: normal; font-weight: 500=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/inconsolata/v32/QldgNThLqRwH-OJ1UHjlKENVzkWGVkL3GZQmAwLYxYWI2qfdm7Lpp7=
c8WR32l3WdycuJDA.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+1=
52-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U=
+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-cSZMdeX3rsHo.woff2") format("woff2"); unicode-ra=
nge: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;=
 }

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-eCZMdeX3rsHo.woff2") format("woff2"); unicode-ra=
nge: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-cyZMdeX3rsHo.woff2") format("woff2"); unicode-ra=
nge: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+30=
0-301, U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-ciZMdeX3rsHo.woff2") format("woff2"); unicode-ra=
nge: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20=
A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Merriweather; font-style: normal; font-weight: 40=
0; font-display: swap; src: url("https://fonts.gstatic.com/s/merriweather/v=
30/u-440qyriQwlOrhSvowK_l5-fCZMdeX3rg.woff2") format("woff2"); unicode-rang=
e: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, =
U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215,=
 U+FEFF, U+FFFD; }

@font-face { font-family: "Merriweather Sans"; font-style: normal; font-wei=
ght: 400; font-display: swap; src: url("https://fonts.gstatic.com/s/merriwe=
athersans/v26/2-cO9IRs1JiJN1FRAMjTN5zd9vgsFF_5asQTb6hZ2JKZou4VhOsHzRRXnKOrn=
x4.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, =
U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Merriweather Sans"; font-style: normal; font-wei=
ght: 400; font-display: swap; src: url("https://fonts.gstatic.com/s/merriwe=
athersans/v26/2-cO9IRs1JiJN1FRAMjTN5zd9vgsFF_5asQTb6hZ2JKZou4VhusHzRRXnKOrn=
x4.woff2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129,=
 U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U=
+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Merriweather Sans"; font-style: normal; font-wei=
ght: 400; font-display: swap; src: url("https://fonts.gstatic.com/s/merriwe=
athersans/v26/2-cO9IRs1JiJN1FRAMjTN5zd9vgsFF_5asQTb6hZ2JKZou4Vh-sHzRRXnKOrn=
x4.woff2") format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, =
U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-=
2C7F, U+A720-A7FF; }

@font-face { font-family: "Merriweather Sans"; font-style: normal; font-wei=
ght: 400; font-display: swap; src: url("https://fonts.gstatic.com/s/merriwe=
athersans/v26/2-cO9IRs1JiJN1FRAMjTN5zd9vgsFF_5asQTb6hZ2JKZou4ViesHzRRXnKOr.=
woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC=
, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+=
2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--sUZ6AEZVcAwD6CfI39rbuvBLEgkpgzNprfGsa5mlge----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap

@charset "utf-8";

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtE6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-=
2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWvU6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1,=
 U+2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtU6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuk6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C,=
 U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWu06FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC,=
 U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWxU6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+302-303, U+305, U+307-308, U+330, U+3=
91-3A1, U+3A3-3A9, U+3B1-3C9, U+3D1, U+3D5-3D6, U+3F0-3F1, U+3F4-3F5, U+203=
4-2037, U+2057, U+20D0-20DC, U+20E1, U+20E5-20EF, U+2102, U+210A-210E, U+21=
10-2112, U+2115, U+2119-211D, U+2124, U+2128, U+212C-212D, U+212F-2131, U+2=
133-2138, U+213C-2140, U+2145-2149, U+2190, U+2192, U+2194-21AE, U+21B0-21E=
5, U+21F1-21F2, U+21F4-2211, U+2213-2214, U+2216-22FF, U+2308-230B, U+2310,=
 U+2319, U+231C-2321, U+2336-237A, U+237C, U+2395, U+239B-23B6, U+23D0, U+2=
3DC-23E1, U+2474-2475, U+25AF, U+25B3, U+25B7, U+25BD, U+25C1, U+25CA, U+25=
CC, U+25FB, U+266D-266F, U+27C0-27FF, U+2900-2AFF, U+2B0E-2B11, U+2B30-2B4C=
, U+2BFE, U+FF5B, U+FF5D, U+1D400-1D7FF, U+1EE00-1EEFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqW106FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+1-C, U+E-1F, U+7F-9F, U+20DD-20E0, U+=
20E2-20E4, U+2150-218F, U+2190, U+2192, U+2194-2199, U+21AF, U+21E6-21F0, U=
+21F3, U+2218-2219, U+2299, U+22C4-22C6, U+2300-243F, U+2440-244A, U+2460-2=
4FF, U+25A0-27BF, U+2800-28FF, U+2921-2922, U+2981, U+29BF, U+29EB, U+2B00-=
2BFF, U+4DC0-4DFF, U+FFF9-FFFB, U+10140-1018E, U+10190-1019C, U+101A0, U+10=
1D0-101FD, U+102E0-102FB, U+10E60-10E7E, U+1D2C0-1D2D3, U+1D2E0-1D37F, U+1F=
000-1F0FF, U+1F100-1F1AD, U+1F1E6-1F1FF, U+1F30D-1F30F, U+1F315, U+1F31C, U=
+1F31E, U+1F320-1F32C, U+1F336, U+1F378, U+1F37D, U+1F382, U+1F393-1F39F, U=
+1F3A7-1F3A8, U+1F3AC-1F3AF, U+1F3C2, U+1F3C4-1F3C6, U+1F3CA-1F3CE, U+1F3D4=
-1F3E0, U+1F3ED, U+1F3F1-1F3F3, U+1F3F5-1F3F7, U+1F408, U+1F415, U+1F41F, U=
+1F426, U+1F43F, U+1F441-1F442, U+1F444, U+1F446-1F449, U+1F44C-1F44E, U+1F=
453, U+1F46A, U+1F47D, U+1F4A3, U+1F4B0, U+1F4B3, U+1F4B9, U+1F4BB, U+1F4BF=
, U+1F4C8-1F4CB, U+1F4D6, U+1F4DA, U+1F4DF, U+1F4E3-1F4E6, U+1F4EA-1F4ED, U=
+1F4F7, U+1F4F9-1F4FB, U+1F4FD-1F4FE, U+1F503, U+1F507-1F50B, U+1F50D, U+1F=
512-1F513, U+1F53E-1F54A, U+1F54F-1F5FA, U+1F610, U+1F650-1F67F, U+1F687, U=
+1F68D, U+1F691, U+1F694, U+1F698, U+1F6AD, U+1F6B2, U+1F6B9-1F6BA, U+1F6BC=
, U+1F6C6-1F6CF, U+1F6D3-1F6D7, U+1F6E0-1F6EA, U+1F6F0-1F6F3, U+1F6F7-1F6FC=
, U+1F700-1F7FF, U+1F800-1F80B, U+1F810-1F847, U+1F850-1F859, U+1F860-1F887=
, U+1F890-1F8AD, U+1F8B0-1F8B1, U+1F900-1F90B, U+1F93B, U+1F946, U+1F984, U=
+1F996, U+1F9E9, U+1FA00-1FA6F, U+1FA70-1FA7C, U+1FA80-1FA88, U+1FA90-1FABD=
, U+1FABF-1FAC5, U+1FACE-1FADB, U+1FAE0-1FAE8, U+1FAF0-1FAF8, U+1FB00-1FBFF=
; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtk6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-=
169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U=
+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWt06FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-=
1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U=
+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuU6FxZCJgg.woff2"=
) format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C=
6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, =
U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtE6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-=
2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWvU6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1,=
 U+2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtU6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuk6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C,=
 U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWu06FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC,=
 U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWxU6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+302-303, U+305, U+307-308, U+330, U+3=
91-3A1, U+3A3-3A9, U+3B1-3C9, U+3D1, U+3D5-3D6, U+3F0-3F1, U+3F4-3F5, U+203=
4-2037, U+2057, U+20D0-20DC, U+20E1, U+20E5-20EF, U+2102, U+210A-210E, U+21=
10-2112, U+2115, U+2119-211D, U+2124, U+2128, U+212C-212D, U+212F-2131, U+2=
133-2138, U+213C-2140, U+2145-2149, U+2190, U+2192, U+2194-21AE, U+21B0-21E=
5, U+21F1-21F2, U+21F4-2211, U+2213-2214, U+2216-22FF, U+2308-230B, U+2310,=
 U+2319, U+231C-2321, U+2336-237A, U+237C, U+2395, U+239B-23B6, U+23D0, U+2=
3DC-23E1, U+2474-2475, U+25AF, U+25B3, U+25B7, U+25BD, U+25C1, U+25CA, U+25=
CC, U+25FB, U+266D-266F, U+27C0-27FF, U+2900-2AFF, U+2B0E-2B11, U+2B30-2B4C=
, U+2BFE, U+FF5B, U+FF5D, U+1D400-1D7FF, U+1EE00-1EEFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqW106FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+1-C, U+E-1F, U+7F-9F, U+20DD-20E0, U+=
20E2-20E4, U+2150-218F, U+2190, U+2192, U+2194-2199, U+21AF, U+21E6-21F0, U=
+21F3, U+2218-2219, U+2299, U+22C4-22C6, U+2300-243F, U+2440-244A, U+2460-2=
4FF, U+25A0-27BF, U+2800-28FF, U+2921-2922, U+2981, U+29BF, U+29EB, U+2B00-=
2BFF, U+4DC0-4DFF, U+FFF9-FFFB, U+10140-1018E, U+10190-1019C, U+101A0, U+10=
1D0-101FD, U+102E0-102FB, U+10E60-10E7E, U+1D2C0-1D2D3, U+1D2E0-1D37F, U+1F=
000-1F0FF, U+1F100-1F1AD, U+1F1E6-1F1FF, U+1F30D-1F30F, U+1F315, U+1F31C, U=
+1F31E, U+1F320-1F32C, U+1F336, U+1F378, U+1F37D, U+1F382, U+1F393-1F39F, U=
+1F3A7-1F3A8, U+1F3AC-1F3AF, U+1F3C2, U+1F3C4-1F3C6, U+1F3CA-1F3CE, U+1F3D4=
-1F3E0, U+1F3ED, U+1F3F1-1F3F3, U+1F3F5-1F3F7, U+1F408, U+1F415, U+1F41F, U=
+1F426, U+1F43F, U+1F441-1F442, U+1F444, U+1F446-1F449, U+1F44C-1F44E, U+1F=
453, U+1F46A, U+1F47D, U+1F4A3, U+1F4B0, U+1F4B3, U+1F4B9, U+1F4BB, U+1F4BF=
, U+1F4C8-1F4CB, U+1F4D6, U+1F4DA, U+1F4DF, U+1F4E3-1F4E6, U+1F4EA-1F4ED, U=
+1F4F7, U+1F4F9-1F4FB, U+1F4FD-1F4FE, U+1F503, U+1F507-1F50B, U+1F50D, U+1F=
512-1F513, U+1F53E-1F54A, U+1F54F-1F5FA, U+1F610, U+1F650-1F67F, U+1F687, U=
+1F68D, U+1F691, U+1F694, U+1F698, U+1F6AD, U+1F6B2, U+1F6B9-1F6BA, U+1F6BC=
, U+1F6C6-1F6CF, U+1F6D3-1F6D7, U+1F6E0-1F6EA, U+1F6F0-1F6F3, U+1F6F7-1F6FC=
, U+1F700-1F7FF, U+1F800-1F80B, U+1F810-1F847, U+1F850-1F859, U+1F860-1F887=
, U+1F890-1F8AD, U+1F8B0-1F8B1, U+1F900-1F90B, U+1F93B, U+1F946, U+1F984, U=
+1F996, U+1F9E9, U+1FA00-1FA6F, U+1FA70-1FA7C, U+1FA80-1FA88, U+1FA90-1FABD=
, U+1FABF-1FAC5, U+1FACE-1FADB, U+1FAE0-1FAE8, U+1FAF0-1FAF8, U+1FB00-1FBFF=
; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtk6FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-=
169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U=
+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWt06FxZCJgvAQ.woff=
2") format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-=
1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U=
+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuU6FxZCJgg.woff2"=
) format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C=
6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, =
U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSKmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2D=
FF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSumu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U=
+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSOmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSymu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U=
+38E-3A1, U+3A3-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS2mu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U=
+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTVOmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+302-303, U+305, U+307-308, U+330, U+391=
-3A1, U+3A3-3A9, U+3B1-3C9, U+3D1, U+3D5-3D6, U+3F0-3F1, U+3F4-3F5, U+2034-=
2037, U+2057, U+20D0-20DC, U+20E1, U+20E5-20EF, U+2102, U+210A-210E, U+2110=
-2112, U+2115, U+2119-211D, U+2124, U+2128, U+212C-212D, U+212F-2131, U+213=
3-2138, U+213C-2140, U+2145-2149, U+2190, U+2192, U+2194-21AE, U+21B0-21E5,=
 U+21F1-21F2, U+21F4-2211, U+2213-2214, U+2216-22FF, U+2308-230B, U+2310, U=
+2319, U+231C-2321, U+2336-237A, U+237C, U+2395, U+239B-23B6, U+23D0, U+23D=
C-23E1, U+2474-2475, U+25AF, U+25B3, U+25B7, U+25BD, U+25C1, U+25CA, U+25CC=
, U+25FB, U+266D-266F, U+27C0-27FF, U+2900-2AFF, U+2B0E-2B11, U+2B30-2B4C, =
U+2BFE, U+FF5B, U+FF5D, U+1D400-1D7FF, U+1EE00-1EEFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTUGmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+1-C, U+E-1F, U+7F-9F, U+20DD-20E0, U+20=
E2-20E4, U+2150-218F, U+2190, U+2192, U+2194-2199, U+21AF, U+21E6-21F0, U+2=
1F3, U+2218-2219, U+2299, U+22C4-22C6, U+2300-243F, U+2440-244A, U+2460-24F=
F, U+25A0-27BF, U+2800-28FF, U+2921-2922, U+2981, U+29BF, U+29EB, U+2B00-2B=
FF, U+4DC0-4DFF, U+FFF9-FFFB, U+10140-1018E, U+10190-1019C, U+101A0, U+101D=
0-101FD, U+102E0-102FB, U+10E60-10E7E, U+1D2C0-1D2D3, U+1D2E0-1D37F, U+1F00=
0-1F0FF, U+1F100-1F1AD, U+1F1E6-1F1FF, U+1F30D-1F30F, U+1F315, U+1F31C, U+1=
F31E, U+1F320-1F32C, U+1F336, U+1F378, U+1F37D, U+1F382, U+1F393-1F39F, U+1=
F3A7-1F3A8, U+1F3AC-1F3AF, U+1F3C2, U+1F3C4-1F3C6, U+1F3CA-1F3CE, U+1F3D4-1=
F3E0, U+1F3ED, U+1F3F1-1F3F3, U+1F3F5-1F3F7, U+1F408, U+1F415, U+1F41F, U+1=
F426, U+1F43F, U+1F441-1F442, U+1F444, U+1F446-1F449, U+1F44C-1F44E, U+1F45=
3, U+1F46A, U+1F47D, U+1F4A3, U+1F4B0, U+1F4B3, U+1F4B9, U+1F4BB, U+1F4BF, =
U+1F4C8-1F4CB, U+1F4D6, U+1F4DA, U+1F4DF, U+1F4E3-1F4E6, U+1F4EA-1F4ED, U+1=
F4F7, U+1F4F9-1F4FB, U+1F4FD-1F4FE, U+1F503, U+1F507-1F50B, U+1F50D, U+1F51=
2-1F513, U+1F53E-1F54A, U+1F54F-1F5FA, U+1F610, U+1F650-1F67F, U+1F687, U+1=
F68D, U+1F691, U+1F694, U+1F698, U+1F6AD, U+1F6B2, U+1F6B9-1F6BA, U+1F6BC, =
U+1F6C6-1F6CF, U+1F6D3-1F6D7, U+1F6E0-1F6EA, U+1F6F0-1F6F3, U+1F6F7-1F6FC, =
U+1F700-1F7FF, U+1F800-1F80B, U+1F810-1F847, U+1F850-1F859, U+1F860-1F887, =
U+1F890-1F8AD, U+1F8B0-1F8B1, U+1F900-1F90B, U+1F93B, U+1F946, U+1F984, U+1=
F996, U+1F9E9, U+1FA00-1FA6F, U+1FA70-1FA7C, U+1FA80-1FA88, U+1FA90-1FABD, =
U+1FABF-1FAC5, U+1FACE-1FADB, U+1FAE0-1FAE8, U+1FAF0-1FAF8, U+1FB00-1FBFF; =
}

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSCmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-16=
9, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1=
EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSGmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E=
9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A=
720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-mu0SC55I.woff2") f=
ormat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, =
U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2=
191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSKmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2D=
FF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSumu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U=
+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSOmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSymu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U=
+38E-3A1, U+3A3-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS2mu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U=
+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTVOmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+302-303, U+305, U+307-308, U+330, U+391=
-3A1, U+3A3-3A9, U+3B1-3C9, U+3D1, U+3D5-3D6, U+3F0-3F1, U+3F4-3F5, U+2034-=
2037, U+2057, U+20D0-20DC, U+20E1, U+20E5-20EF, U+2102, U+210A-210E, U+2110=
-2112, U+2115, U+2119-211D, U+2124, U+2128, U+212C-212D, U+212F-2131, U+213=
3-2138, U+213C-2140, U+2145-2149, U+2190, U+2192, U+2194-21AE, U+21B0-21E5,=
 U+21F1-21F2, U+21F4-2211, U+2213-2214, U+2216-22FF, U+2308-230B, U+2310, U=
+2319, U+231C-2321, U+2336-237A, U+237C, U+2395, U+239B-23B6, U+23D0, U+23D=
C-23E1, U+2474-2475, U+25AF, U+25B3, U+25B7, U+25BD, U+25C1, U+25CA, U+25CC=
, U+25FB, U+266D-266F, U+27C0-27FF, U+2900-2AFF, U+2B0E-2B11, U+2B30-2B4C, =
U+2BFE, U+FF5B, U+FF5D, U+1D400-1D7FF, U+1EE00-1EEFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTUGmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+1-C, U+E-1F, U+7F-9F, U+20DD-20E0, U+20=
E2-20E4, U+2150-218F, U+2190, U+2192, U+2194-2199, U+21AF, U+21E6-21F0, U+2=
1F3, U+2218-2219, U+2299, U+22C4-22C6, U+2300-243F, U+2440-244A, U+2460-24F=
F, U+25A0-27BF, U+2800-28FF, U+2921-2922, U+2981, U+29BF, U+29EB, U+2B00-2B=
FF, U+4DC0-4DFF, U+FFF9-FFFB, U+10140-1018E, U+10190-1019C, U+101A0, U+101D=
0-101FD, U+102E0-102FB, U+10E60-10E7E, U+1D2C0-1D2D3, U+1D2E0-1D37F, U+1F00=
0-1F0FF, U+1F100-1F1AD, U+1F1E6-1F1FF, U+1F30D-1F30F, U+1F315, U+1F31C, U+1=
F31E, U+1F320-1F32C, U+1F336, U+1F378, U+1F37D, U+1F382, U+1F393-1F39F, U+1=
F3A7-1F3A8, U+1F3AC-1F3AF, U+1F3C2, U+1F3C4-1F3C6, U+1F3CA-1F3CE, U+1F3D4-1=
F3E0, U+1F3ED, U+1F3F1-1F3F3, U+1F3F5-1F3F7, U+1F408, U+1F415, U+1F41F, U+1=
F426, U+1F43F, U+1F441-1F442, U+1F444, U+1F446-1F449, U+1F44C-1F44E, U+1F45=
3, U+1F46A, U+1F47D, U+1F4A3, U+1F4B0, U+1F4B3, U+1F4B9, U+1F4BB, U+1F4BF, =
U+1F4C8-1F4CB, U+1F4D6, U+1F4DA, U+1F4DF, U+1F4E3-1F4E6, U+1F4EA-1F4ED, U+1=
F4F7, U+1F4F9-1F4FB, U+1F4FD-1F4FE, U+1F503, U+1F507-1F50B, U+1F50D, U+1F51=
2-1F513, U+1F53E-1F54A, U+1F54F-1F5FA, U+1F610, U+1F650-1F67F, U+1F687, U+1=
F68D, U+1F691, U+1F694, U+1F698, U+1F6AD, U+1F6B2, U+1F6B9-1F6BA, U+1F6BC, =
U+1F6C6-1F6CF, U+1F6D3-1F6D7, U+1F6E0-1F6EA, U+1F6F0-1F6F3, U+1F6F7-1F6FC, =
U+1F700-1F7FF, U+1F800-1F80B, U+1F810-1F847, U+1F850-1F859, U+1F860-1F887, =
U+1F890-1F8AD, U+1F8B0-1F8B1, U+1F900-1F90B, U+1F93B, U+1F946, U+1F984, U+1=
F996, U+1F9E9, U+1FA00-1FA6F, U+1FA70-1FA7C, U+1FA80-1FA88, U+1FA90-1FABD, =
U+1FABF-1FAC5, U+1FACE-1FADB, U+1FAE0-1FAE8, U+1FAF0-1FAF8, U+1FB00-1FBFF; =
}

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSCmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-16=
9, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1=
EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSGmu0SC55K5gw.woff2"=
) format("woff2"); unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E=
9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A=
720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; font-display: swap; src: url("https://fonts.gstatic.c=
om/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-mu0SC55I.woff2") f=
ormat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, =
U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2=
191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--sUZ6AEZVcAwD6CfI39rbuvBLEgkpgzNprfGsa5mlge------
